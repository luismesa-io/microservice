<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.luismesa</groupId>
    <artifactId>microservice</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>microservice-1.0-SNAPSHOT</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <jacoco.covergage.ratio>1.0</jacoco.covergage.ratio>
        <argLine>-Dfile.encoding=@{project.build.sourceEncoding}</argLine>
        <skipUnitTests>true</skipUnitTests><!-- This is overriden by environment variables with a profile at the bottom of this file-->
        <db.admin.username>USERNAME</db.admin.username><!-- This is overriden by environment variables with a profile at the bottom of this file-->
        <db.admin.password>ADMIN_PASSWORD</db.admin.password><!-- This is overriden by environment variables with a profile at the bottom of this file-->
        <jakarta.persistence.jdbc.driver>DRIVER</jakarta.persistence.jdbc.driver><!-- This is overriden by environment variables with a profile at the bottom of this file-->
        <jakarta.persistence.jdbc.url>URL</jakarta.persistence.jdbc.url><!-- This is overriden by environment variables with a profile at the bottom of this file-->
        <jakarta.persistence.jdbc.user>USER</jakarta.persistence.jdbc.user><!-- This is overriden by environment variables with a profile at the bottom of this file-->
        <jakarta.persistence.jdbc.password>PASSWORD</jakarta.persistence.jdbc.password><!-- This is overriden by environment variables with a profile at the bottom of this file-->
        <jakarta.persistence.sql-load-script-source>LOAD_SCRIPT</jakarta.persistence.sql-load-script-source><!-- This is overriden by environment variables with a profile at the bottom of this file-->
        <jakarta.persistence.schema-generation.database.action>DATABASE_ACTION</jakarta.persistence.schema-generation.database.action><!-- This is overriden by environment variables with a profile at the bottom of this file-->
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fish.payara.api</groupId>
                <artifactId>payara-bom</artifactId>
                <version>6.2023.10</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>payara-nexus-artifacts</id>
            <url>https://nexus.payara.fish/repository/payara-artifacts</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>payara-nexus-artifacts</id>
            <url>https://nexus.payara.fish/repository/payara-artifacts</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- PROVIDED -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.core</artifactId>
            <scope>provided</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jakarta.rs</groupId>
            <artifactId>jackson-jakarta-rs-json-provider</artifactId>
            <scope>provided</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <scope>provided</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- DATABASE -->
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>12.4.1.jre11</version>
        </dependency>
        <!-- TESTS -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-impl</artifactId>
            <version>5.1.2.Final</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>3.5.3.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-junit5</artifactId>
            <type>jar</type>
            <version>4.0.1.Final</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-engine</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.weld</groupId>
                    <artifactId>weld-core-impl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.weld.se</groupId>
                    <artifactId>weld-se-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <type>jar</type>
            <version>5.1.2.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.smallrye.config</groupId>
            <artifactId>smallrye-config</artifactId>
            <version>3.4.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>ROOT</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                    </compilerArgs>
                    <debug>true</debug>
                    <showDeprecation>true</showDeprecation>
                    <useIncrementalCompilation>true</useIncrementalCompilation>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mockito</groupId>
                            <artifactId>mockito-junit-jupiter</artifactId>
                            <version>5.7.0</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <skipTests>${skipUnitTests}</skipTests>
                    <parallel>methods</parallel>
                    <threadCount>8</threadCount>
                    <trimStackTrace>false</trimStackTrace>
                    <rerunFailingTestsCount>3</rerunFailingTestsCount>
                    <environmentVariables>
                    </environmentVariables>
                    <systemPropertyVariables>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <skipITs>${skipIntegrationTests}</skipITs>
                    <parallel>classes</parallel>
                    <threadCount>8</threadCount>
                    <trimStackTrace>false</trimStackTrace>
                    <rerunFailingTestsCount>3</rerunFailingTestsCount>
                    <!--<dependenciesToScan>
                        <dependency>io.luismesa:halcyon-reference-gender:jar:it-tests</dependency>
                        <dependency>io.luismesa:halcyon-reference-locale:jar:it-tests</dependency>
                        <dependency>io.luismesa:halcyon-reference-translation:jar:it-tests</dependency>
                        <dependency>io.luismesa:halcyon-reference-picture:jar:it-tests</dependency>
                        <dependency>io.luismesa:halcyon-reference-social:jar:it-tests</dependency>
                    </dependenciesToScan>-->
                    <environmentVariables>
                        <DB_ADMIN_USERNAME>${db.admin.username}</DB_ADMIN_USERNAME>
                        <DB_ADMIN_PASSWORD>${db.admin.password}</DB_ADMIN_PASSWORD>
                        <JAKARTA_PERSISTENCE_JDBC_DRIVER>${jakarta.persistence.jdbc.driver}</JAKARTA_PERSISTENCE_JDBC_DRIVER>
                        <JAKARTA_PERSISTENCE_JDBC_URL>${jakarta.persistence.jdbc.url}</JAKARTA_PERSISTENCE_JDBC_URL>
                        <JAKARTA_PERSISTENCE_JDBC_USER>${jakarta.persistence.jdbc.user}</JAKARTA_PERSISTENCE_JDBC_USER>
                        <JAKARTA_PERSISTENCE_JDBC_PASSWORD>${jakarta.persistence.jdbc.password}</JAKARTA_PERSISTENCE_JDBC_PASSWORD>
                        <JAKARTA_PERSISTENCE_SCHEMA_GENERATION_DATABASE_ACTION>${jakarta.persistence.schema-generation.database.action}</JAKARTA_PERSISTENCE_SCHEMA_GENERATION_DATABASE_ACTION>
                        <JAKARTA_PERSISTENCE_SQL_LOAD_SCRIPT_SOURCE>${jakarta.persistence.sql-load-script-source}</JAKARTA_PERSISTENCE_SQL_LOAD_SCRIPT_SOURCE>
                    </environmentVariables>
                    <systemPropertyVariables>
                        <db.admin.username>${db.admin.username}</db.admin.username>
                        <db.admin.password>${db.admin.password}</db.admin.password>
                        <jakarta.persistence.jdbc.driver>${jakarta.persistence.jdbc.driver}</jakarta.persistence.jdbc.driver>
                        <jakarta.persistence.jdbc.url>${jakarta.persistence.jdbc.url}</jakarta.persistence.jdbc.url>
                        <jakarta.persistence.jdbc.user>${jakarta.persistence.jdbc.user}</jakarta.persistence.jdbc.user>
                        <jakarta.persistence.jdbc.password>${jakarta.persistence.jdbc.password}</jakarta.persistence.jdbc.password>
                        <jakarta.persistence.schema-generation.database.action>${jakarta.persistence.schema-generation.database.action}</jakarta.persistence.schema-generation.database.action>
                        <jakarta.persistence.sql-load-script-source>${jakarta.persistence.sql-load-script-source}</jakarta.persistence.sql-load-script-source>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <trimStackTrace>false</trimStackTrace>
                            <!--<includes>
                                <include>**/*.IT.class</include>
                            </includes>-->
                            <reportsDirectory>
                                ${project.build.directory}/failsafe-reports
                            </reportsDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <trimStackTrace>false</trimStackTrace>
                            <!--<includes>
                                <include>**/*.IT.class</include>
                            </includes>-->
                            <reportsDirectory>
                                ${project.build.directory}/failsafe-reports
                            </reportsDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.covergage.ratio}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>CLASS</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.covergage.ratio}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>METHOD</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.covergage.ratio}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.covergage.ratio}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.covergage.ratio}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.covergage.ratio}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.43.4</version>
                <executions>
                    <execution>
                        <id>build-image-run-container</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <showLogs>true</showLogs>
                            <verbose>true</verbose>
                            <images>
                                <image>
                                    <name>mcr.microsoft.com/azure-sql-edge:latest</name>
                                    <alias>database</alias>
                                    <run>
                                        <capAdd>SYS_PTRACE</capAdd>
                                        <env>
                                            <ACCEPT_EULA>1</ACCEPT_EULA>
                                            <MSSQL_SA_PASSWORD>${db.admin.password}</MSSQL_SA_PASSWORD>
                                        </env>
                                        <ports>
                                            <port>1433:1433</port>
                                        </ports>
                                        <wait>
                                            <log>(?s)EdgeTelemetry starting up</log>
                                            <time>20000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>liquibase/liquibase:latest</name>
                                    <alias>liquibase-system-update</alias>
                                    <run>
                                        <containerNamePattern>liquibase-system-update</containerNamePattern>
                                        <dependsOn>
                                            <container>database</container>
                                        </dependsOn>
                                        <links>
                                            <link>database:database</link>
                                        </links>
                                        <cmd>
                                            <shell>--changeLogFile=system/changelog.xml update</shell>
                                        </cmd>
                                        <wait>
                                            <log>Liquibase command 'update' was executed successfully.</log>
                                            <time>10000</time>
                                        </wait>
                                        <env>
                                            <LIQUIBASE_COMMAND_URL>jdbc:sqlserver://database:1433;encrypt=true;trustServerCertificate=true</LIQUIBASE_COMMAND_URL>
                                            <LIQUIBASE_COMMAND_USERNAME>${db.admin.username}</LIQUIBASE_COMMAND_USERNAME>
                                            <LIQUIBASE_COMMAND_PASSWORD>${db.admin.password}</LIQUIBASE_COMMAND_PASSWORD>
                                            <LIQUIBASE_LOG_LEVEL>FINE</LIQUIBASE_LOG_LEVEL>
                                        </env>
                                        <volumes>
                                            <bind>
                                                <volume>
                                                    ${project.basedir}/database/mssql/system:/liquibase/system:ro
                                                </volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </image>
                                <image>
                                    <name>liquibase/liquibase:latest</name>
                                    <alias>liquibase-system-status-after</alias>
                                    <run>
                                        <containerNamePattern>liquibase-system-status-after</containerNamePattern>
                                        <dependsOn>
                                            <container>liquibase-system-update</container>
                                        </dependsOn>
                                        <links>
                                            <link>database:database</link>
                                        </links>
                                        <cmd>
                                            <shell>--changeLogFile=system/changelog.xml status</shell>
                                        </cmd>
                                        <wait>
                                            <log>Liquibase command 'status' was executed successfully.</log>
                                            <time>10000</time>
                                        </wait>
                                        <env>
                                            <LIQUIBASE_COMMAND_URL>jdbc:sqlserver://database:1433;encrypt=true;trustServerCertificate=true</LIQUIBASE_COMMAND_URL>
                                            <LIQUIBASE_COMMAND_USERNAME>${db.admin.username}</LIQUIBASE_COMMAND_USERNAME>
                                            <LIQUIBASE_COMMAND_PASSWORD>${db.admin.password}</LIQUIBASE_COMMAND_PASSWORD>
                                            <LIQUIBASE_LOG_LEVEL>FINE</LIQUIBASE_LOG_LEVEL>
                                        </env>
                                        <volumes>
                                            <bind>
                                                <volume>
                                                    ${project.basedir}/database/mssql/system:/liquibase/system:ro
                                                </volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </image>
                                <image>
                                    <name>liquibase/liquibase:latest</name>
                                    <alias>liquibase-microservice-update</alias>
                                    <run>
                                        <containerNamePattern>liquibase-microservice-update</containerNamePattern>
                                        <dependsOn>
                                            <container>liquibase-system-update</container>
                                        </dependsOn>
                                        <links>
                                            <link>database:database</link>
                                        </links>
                                        <cmd>
                                            <shell>--changeLogFile=service/changelog.xml update</shell>
                                        </cmd>
                                        <wait>
                                            <log>Liquibase command 'update' was executed successfully.</log>
                                            <time>10000</time>
                                        </wait>
                                        <env>
                                            <LIQUIBASE_COMMAND_URL>jdbc:sqlserver://database:1433;encrypt=true;trustServerCertificate=true</LIQUIBASE_COMMAND_URL>
                                            <LIQUIBASE_COMMAND_USERNAME>${jakarta.persistence.jdbc.user}</LIQUIBASE_COMMAND_USERNAME>
                                            <LIQUIBASE_COMMAND_PASSWORD>${jakarta.persistence.jdbc.password}</LIQUIBASE_COMMAND_PASSWORD>
                                            <LIQUIBASE_LIQUIBASE_SCHEMA_NAME>MICROSERVICE</LIQUIBASE_LIQUIBASE_SCHEMA_NAME>
                                            <LIQUIBASE_LOG_LEVEL>FINE</LIQUIBASE_LOG_LEVEL>
                                        </env>
                                        <volumes>
                                            <bind>
                                                <volume>
                                                    ${project.basedir}/database/mssql/service:/liquibase/service:ro
                                                </volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </image>
                                <image>
                                    <name>liquibase/liquibase:latest</name>
                                    <alias>liquibase-microservice-update-check</alias>
                                    <run>
                                        <containerNamePattern>liquibase-microservice-update-check</containerNamePattern>
                                        <dependsOn>
                                            <container>liquibase-microservice-update</container>
                                        </dependsOn>
                                        <links>
                                            <link>database:database</link>
                                        </links>
                                        <cmd>
                                            <shell>--changeLogFile=service/changelog.xml update</shell>
                                        </cmd>
                                        <wait>
                                            <log>Liquibase command 'update' was executed successfully.</log>
                                            <time>10000</time>
                                        </wait>
                                        <env>
                                            <LIQUIBASE_COMMAND_URL>jdbc:sqlserver://database:1433;encrypt=true;trustServerCertificate=true</LIQUIBASE_COMMAND_URL>
                                            <LIQUIBASE_COMMAND_USERNAME>${jakarta.persistence.jdbc.user}</LIQUIBASE_COMMAND_USERNAME>
                                            <LIQUIBASE_COMMAND_PASSWORD>${jakarta.persistence.jdbc.password}</LIQUIBASE_COMMAND_PASSWORD>
                                            <LIQUIBASE_LIQUIBASE_SCHEMA_NAME>MICROSERVICE</LIQUIBASE_LIQUIBASE_SCHEMA_NAME>
                                            <LIQUIBASE_LOG_LEVEL>FINE</LIQUIBASE_LOG_LEVEL>
                                        </env>
                                        <volumes>
                                            <bind>
                                                <volume>
                                                    ${project.basedir}/database/mssql/service:/liquibase/service:ro
                                                </volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </image>
                                <image>
                                    <name>liquibase/liquibase:latest</name>
                                    <alias>liquibase-microservice-status-after</alias>
                                    <run>
                                        <containerNamePattern>liquibase-microservice-status-after</containerNamePattern>
                                        <dependsOn>
                                            <container>liquibase-microservice-update-check</container>
                                        </dependsOn>
                                        <links>
                                            <link>database:database</link>
                                        </links>
                                        <cmd>
                                            <shell>--changeLogFile=service/changelog.xml status</shell>
                                        </cmd>
                                        <wait>
                                            <log>Liquibase command 'status' was executed successfully.</log>
                                            <time>10000</time>
                                        </wait>
                                        <env>
                                            <LIQUIBASE_COMMAND_URL>jdbc:sqlserver://database:1433;encrypt=true;trustServerCertificate=true</LIQUIBASE_COMMAND_URL>
                                            <LIQUIBASE_COMMAND_USERNAME>${jakarta.persistence.jdbc.user}</LIQUIBASE_COMMAND_USERNAME>
                                            <LIQUIBASE_COMMAND_PASSWORD>${jakarta.persistence.jdbc.password}</LIQUIBASE_COMMAND_PASSWORD>
                                            <LIQUIBASE_LIQUIBASE_SCHEMA_NAME>MICROSERVICE</LIQUIBASE_LIQUIBASE_SCHEMA_NAME>
                                            <LIQUIBASE_LOG_LEVEL>FINE</LIQUIBASE_LOG_LEVEL>
                                        </env>
                                        <volumes>
                                            <bind>
                                                <volume>
                                                    ${project.basedir}/database/mssql/service:/liquibase/service:ro
                                                </volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </image>
                                <image>
                                    <name>microservice:%t</name>
                                    <alias>microservice</alias>
                                    <build>
                                        <contextDir>${project.basedir}</contextDir>
                                        <dockerFile>Dockerfile</dockerFile>
                                        <tags>
                                            <tag>latest</tag>
                                            <tag>${project.version}</tag>
                                        </tags>
                                        <args>
                                            <JAKARTA_PERSISTENCE_JDBC_DRIVER>${jakarta.persistence.jdbc.driver}</JAKARTA_PERSISTENCE_JDBC_DRIVER>
                                            <JAKARTA_PERSISTENCE_JDBC_URL>${jakarta.persistence.jdbc.url}</JAKARTA_PERSISTENCE_JDBC_URL>
                                            <JAKARTA_PERSISTENCE_JDBC_USER>${jakarta.persistence.jdbc.user}</JAKARTA_PERSISTENCE_JDBC_USER>
                                            <JAKARTA_PERSISTENCE_JDBC_PASSWORD>${jakarta.persistence.jdbc.password}</JAKARTA_PERSISTENCE_JDBC_PASSWORD>
                                            <JAKARTA_PERSISTENCE_SCHEMA_GENERATION_DATABASE_ACTION>${jakarta.persistence.schema-generation.database.action}</JAKARTA_PERSISTENCE_SCHEMA_GENERATION_DATABASE_ACTION>
                                            <JAKARTA_PERSISTENCE_SQL_LOAD_SCRIPT_SOURCE>${jakarta.persistence.sql-load-script-source}</JAKARTA_PERSISTENCE_SQL_LOAD_SCRIPT_SOURCE>
                                        </args>
                                    </build>
                                    <run>
                                        <dependsOn>
                                            <container>liquibase-microservice-status-after</container>
                                        </dependsOn>
                                        <links>
                                            <link>database:database</link>
                                        </links>
                                        <!--1GiB Limit-->
                                        <memory>1073741824</memory>
                                        <env>
                                            <JAKARTA_PERSISTENCE_JDBC_DRIVER>${jakarta.persistence.jdbc.driver}</JAKARTA_PERSISTENCE_JDBC_DRIVER>
                                            <JAKARTA_PERSISTENCE_JDBC_URL>${jakarta.persistence.jdbc.url}</JAKARTA_PERSISTENCE_JDBC_URL>
                                            <JAKARTA_PERSISTENCE_JDBC_USER>${jakarta.persistence.jdbc.user}</JAKARTA_PERSISTENCE_JDBC_USER>
                                            <JAKARTA_PERSISTENCE_JDBC_PASSWORD>${jakarta.persistence.jdbc.password}</JAKARTA_PERSISTENCE_JDBC_PASSWORD>
                                            <JAKARTA_PERSISTENCE_SCHEMA_GENERATION_DATABASE_ACTION>${jakarta.persistence.schema-generation.database.action}</JAKARTA_PERSISTENCE_SCHEMA_GENERATION_DATABASE_ACTION>
                                            <JAKARTA_PERSISTENCE_SQL_LOAD_SCRIPT_SOURCE>${jakarta.persistence.sql-load-script-source}</JAKARTA_PERSISTENCE_SQL_LOAD_SCRIPT_SOURCE>
                                        </env>
                                        <ports>
                                            <port>4848:4848</port>
                                            <port>8080:8080</port>
                                            <port>8181:8181</port>
                                            <port>9009:9009</port>
                                        </ports>
                                        <wait>
                                            <http>
                                                <url>http://localhost:8080/resources/desks</url>
                                            </http>
                                            <http>
                                                <url>http://localhost:8080/resources/floors</url>
                                            </http>
                                            <http>
                                                <url>http://localhost:8080/resources/buildings</url>
                                            </http>
                                            <time>20000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-container</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>8.4.0</version>
                <configuration>
                    <skip>false</skip>
                    <failBuildOnCVSS>8</failBuildOnCVSS>
                    <failOnError>false</failOnError>
                    <skipProvidedScope>false</skipProvidedScope>
                    <skipRuntimeScope>false</skipRuntimeScope>
                    <skipSystemScope>false</skipSystemScope>
                    <skipTestScope>true</skipTestScope>
                    <suppressionFiles>
                        <suppressionFile>owasp-suppressions.xml</suppressionFile>
                    </suppressionFiles>
                    <outputDirectory>${basedir}/target/site/dependency-check</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>test-environment-full-mssql</id>
            <activation>
                <property>
                    <name>environment</name>
                    <value>test-full-mssql</value>
                </property>
            </activation>
            <properties>
                <skipIntegrationTests>false</skipIntegrationTests>
            </properties>
        </profile>
        <profile>
            <id>skip-tests-override</id>
            <activation>
                <property>
                    <name>env.SKIP_TESTS</name>
                </property>
            </activation>
            <properties>
                <skipUnitTests>${env.SKIP_TESTS}</skipUnitTests>
            </properties>
        </profile>
        <profile>
            <id>db-admin-username-override</id>
            <activation>
                <property>
                    <name>env.DB_ADMIN_USERNAME</name>
                </property>
            </activation>
            <properties>
                <db.admin.username>${env.DB_ADMIN_USERNAME}</db.admin.username>
            </properties>
        </profile>
        <profile>
            <id>db-admin-password-override</id>
            <activation>
                <property>
                    <name>env.DB_ADMIN_PASSWORD</name>
                </property>
            </activation>
            <properties>
                <db.admin.password>${env.DB_ADMIN_PASSWORD}</db.admin.password>
            </properties>
        </profile>
        <profile>
            <id>jdbc-driver-override</id>
            <activation>
                <property>
                    <name>env.JAKARTA_PERSISTENCE_JDBC_DRIVER</name>
                </property>
            </activation>
            <properties>
                <jakarta.persistence.jdbc.driver>${env.JAKARTA_PERSISTENCE_JDBC_DRIVER}</jakarta.persistence.jdbc.driver>
            </properties>
        </profile>
        <profile>
            <id>jdbc-url-override</id>
            <activation>
                <property>
                    <name>env.JAKARTA_PERSISTENCE_JDBC_URL</name>
                </property>
            </activation>
            <properties>
                <jakarta.persistence.jdbc.url>${env.JAKARTA_PERSISTENCE_JDBC_URL}</jakarta.persistence.jdbc.url>
            </properties>
        </profile>
        <profile>
            <id>jdbc-user-override</id>
            <activation>
                <property>
                    <name>env.JAKARTA_PERSISTENCE_JDBC_USER</name>
                </property>
            </activation>
            <properties>
                <jakarta.persistence.jdbc.user>${env.JAKARTA_PERSISTENCE_JDBC_USER}</jakarta.persistence.jdbc.user>
            </properties>
        </profile>
        <profile>
            <id>jdbc-password-override</id>
            <activation>
                <property>
                    <name>env.JAKARTA_PERSISTENCE_JDBC_PASSWORD</name>
                </property>
            </activation>
            <properties>
                <jakarta.persistence.jdbc.password>${env.JAKARTA_PERSISTENCE_JDBC_PASSWORD}</jakarta.persistence.jdbc.password>
            </properties>
        </profile>
        <profile>
            <id>sql-load-script-source-override</id>
            <activation>
                <property>
                    <name>env.JAKARTA_PERSISTENCE_SQL_LOAD_SCRIPT_SOURCE</name>
                </property>
            </activation>
            <properties>
                <jakarta.persistence.sql-load-script-source>${env.JAKARTA_PERSISTENCE_SQL_LOAD_SCRIPT_SOURCE}</jakarta.persistence.sql-load-script-source>
            </properties>
        </profile>
        <profile>
            <id>schema-generation.database.action-override</id>
            <activation>
                <property>
                    <name>env.JAKARTA_PERSISTENCE_SCHEMA_GENERATION_DATABASE_ACTION</name>
                </property>
            </activation>
            <properties>
                <jakarta.persistence.schema-generation.database.action>${env.JAKARTA_PERSISTENCE_SCHEMA_GENERATION_DATABASE_ACTION}</jakarta.persistence.schema-generation.database.action>
            </properties>
        </profile>
    </profiles>
</project>